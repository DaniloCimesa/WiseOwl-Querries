Printing in SQL Server

Excercise link: https://www.wiseowl.co.uk/sql/exercises/standard/archived/1090/

Code:
Use HistoricalEvents

declare @List varchar(max)
set @List=''
select @List=@List+char(13)+' '+char(10)+EventName+'   /    '+convert(varchar(30),EventDate)
from tblEvent

PRINT ''
PRINT 'Great events in history'
PRINT '-----------------------'
PRINT ''
Print 'Event Name      /      Event Date'
PRINT '------------------------------'
Print @List

--------------------------------------------------------------------------------------------------------------------------------------------
Excercise link: https://www.wiseowl.co.uk/sql/exercises/standard/archived/1775/

Code:

use Training 

--It could be done without making procedure. 
Alter Procedure Printing 
(@CourseNum smallint)
as
begin
declare @CourseNameVar varchar(30)
declare @StartDate date
declare @NumberDays varchar(10)

select @CourseNameVar=Upper(CourseName),@StartDate=StartDate, @NumberDays=NumberDays 
from tblCourse C
join tblSchedule S
on c.CourseId=s.CourseId
where ScheduleId=@CourseNum

Print 'About course number ' + convert (varchar(2),@CourseNum)
Print '-------------------------'
Print 'Start date: ' + convert(varchar(20),@StartDate)
Print 'Course name: '+ @CourseNameVar
Print 'Course length: '+ @NumberDays +' day(s)'
end

exec Printing 17

--------------------------------------------------------------------------------------------------------------------------------------------

Excercise link: https://www.wiseowl.co.uk/sql/exercises/standard/simple-queries/4103/

Code:
--Declaring variables and giving them values from querries. 
use WorldEvents

declare @Var1 varchar(max)
Set @Var1=''
Select top 2 @Var1=@Var1+char(13)+char(10)+' '+EventName+' ' +convert(varchar(10), EventDate)
from tblEvent
order by EventDate asc


declare @Var2 varchar(max)
set @Var2=''

select top 2 @Var2=@Var2+char(13)+char(10)+' '+EventName+' ' +convert(varchar(10), EventDate)
from tblEvent
order by EventDate desc

print ' What'
print ' ----------------------------------------'
print @Var1
print ' '
print ' What'
print ' ----------------------------------------'
print @Var2

---------------------------------------------------------------------------------------------------------------------------------------
Excercise link: https://www.wiseowl.co.uk/sql/exercises/standard/variables/3970/

Code:
--First declaring variables, then setting them and after that printing them. Simple excercise. 
use DoctorWho

declare @DoctorNumber int=1
declare @DoctorName varchar(100)
declare @NumberEpisodes int

set @DoctorName= (Select DoctorName from tblDoctor where DoctorId=@DoctorNumber)
set @NumberEpisodes = (Select count(episodeid) from tblEpisode where DoctorId=@DoctorNumber)

print 'Results for doctor number '+convert(varchar(2), @DoctorNumber) 
print '---------------------------'
print 'Doctor Name: ' + @DoctorName
print 'Episodes appeard in: ' + convert (varchar(5), @NumberEpisodes) 
------------------------------------------------------------------------------------------------------------------------------
Excercise link: https://www.wiseowl.co.uk/sql/exercises/standard/archived/1776/

Code:

use training
--Setting first variable should be easy.
Declare @CourseName varchar(50)

set @CourseName = (

select CourseName
from tblCourse C
join tblSchedule S
on C.CourseId=S.CourseId
where ScheduleId=1 )
--Second variable is a bit tricky, you have to set it as a blank then with a select statement you get values/rows you want to. 
--Note you have to add char(13) and char(10) and you get a line break. 
declare @People varchar(max)
set @People=''

select @People = @People+ FirstName +' '+ LastName+char(13)+char(10)

FROM	
	tblPerson AS p
	INNER JOIN tblDelegate AS d ON p.PersonId=d.DelegateId
	INNER JOIN tblSchedule AS s on d.ScheduleId=s.ScheduleId
	INNER JOIN tblCourse AS c on s.CourseId=c.CourseId
WHERE
	s.ScheduleId=1


Print @CourseName
Print @People
------------------------------------------------------------------------------------------------------



